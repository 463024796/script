#!/bin/sh
export OS=debian
echo "export OS=$OS" >> $WORKDIRECTORY/envsetup.sh

# Update system
if [ $LANG=zh_CN.UTF-8 ]; then
  echo "更新系统"
else
  echo "Update system"
fi
if [ $SUDO = yes ]; then
unencrytedpasswd
echo $PASSWD | sudo -S apt-get update -y && sudo -S apt-get upgrade -y && sudo -S apt-get autoremove -y && sudo -S apt-get autoclean -y && $SUDO -S apt-get clean -y
encrytedpasswd
elif [ $SUDO = no ]; then
apt-get update -y && apt-get upgrade -y && apt-get autoremove -y && apt-get autoclean -y && apt-get clean -y
fi

# Installation of basic build dependencies
if [ $LANG=zh_CN.UTF-8 ]; then
  echo "安装编译Shadowsocks-libev时需要的依赖包"
else
  echo "Installation of basic Shadowsocks-libev build dependencies"
fi
if [ $SUDO = yes ]; then
unencrytedpasswd
echo $PASSWD | sudo -S apt-get install --no-install-recommends gettext build-essential autoconf libtool libpcre3-dev asciidoc xmlto libev-dev automake asciidoc xmlto git libc-ares-dev curl git -y
encrytedpasswd
elif [ $SUDO = no ]; then
apt-get install --no-install-recommends gettext build-essential autoconf libtool libpcre3-dev asciidoc xmlto libev-dev automake asciidoc xmlto git libc-ares-dev curl git -y
fi

# Install virtual machine architecture check package
if [ $LANG=zh_CN.UTF-8 ]; then
  echo "安装虚拟机架构检测包"
else
  echo "Install virtual machine architecture check package"
fi
if [ $SUDO = yes ]; then
unencrytedpasswd
echo $PASSWD | sudo -S apt-get install virt-what -y
encrytedpasswd
elif [ $SUDO = no ]; then
apt-get install virt-what -y
fi

if [ $LANG=zh_CN.UTF-8 ]; then
  echo "进入$WORKDIRECTORY"
else
  echo "work in $WORKDIRECTORY"
fi

cd $WORKDIRECTORY

. $DEP/libsodium
. $DEP/mbedtls
. $DEP/shadowsocks
. $DEP/simple-obfs
